1. 게시판 목록(/board?p=?)
 - 게시물에 대한 목록을 출력한다.(글번호, 제목, 글쓴이, 등록일)
 - 글쓰기 버튼( 글쓰기 화면으로 넘어감)
 - 해당글을 클릭(해당글의 상세 정보)
 - 글이 몇개 이상이면 페이지 버튼

2. 글쓰기(/board/write)
 - 글작성( 제목, 내용, ID, Passwd)
 - 확인을 누르면 내용은 글작성 적용페이지로 넘기고, 게시판 목록으로 리다이렉션

3. 글 작성 적용페이지
 - 글쓰기 화면에서 받은 내용을 적용하는 페이지

4. 글 상세(/board/{글번호})
 - 해당 글에 대한 내용 표출(글제목, ID/등록일 , 내용) + 패스워드(메모리에)
 - 수정, 삭제, 목록 이벤트
 - 수정과 삭제는 글의 패스워드와 입력된 패스워드가 일치하면 가능

5. 글 수정(/board/update/{글번호})
 - 해당 글에 대한 표현 정보(내용, 글제목, ID)
 - 수정 이벤트(수정 데이터는 글수정 적용페이지로 넘기고, 목록으로 리다이렉션)

6. 글 수정 적용페이지
 - 글 수정 화면에서 받은 내용을 적용하는 페이지

-----------------------------------------------

1) Form tag 작성 방법
http://localhost:8080/form.html

폼 => 서블릿(HttpServletRequest)

<form>
select => 멀티박스
</form>

2) html을 만들어서 값을 가지고 올 것

3) 쿠키, 세션, forward, redirect

---------------------------------------------------------------------
2019-01-14
java.sql 인터페이스 => 프로그램은 구현부터하는 게 아니고 인터페이스의 정의를 가져야 한다.
 - Connection
 - PreparedStatement
 - ResultSet

 에 대한 인터페이스

 => 클래스 (DriverManager) Java에서 제공하지 않는다. 각각마다 프로토콜이 다르고, 그 방법은 DB의 제작자들이 안다.

 - DB연결
 - SQL 준비
 - 실제 서버에 쿼리를 실행
 - 결과 출력
 - DBMS 종료(연결을 끊는다.)

 주변 class들 .jar로 이루어져 있다.
 이러한 기능을 구현하는 것을 JDBC Driver class 이라고 한다.

 ######
 1. main메소드에서 jdbc를 이용하여 값을 출력.
 2. Dao 인터페이스와 클래스로 수정하여 main메소드에서 실행. (dao test)
    중복된 코드를 어떻게 제거 할까? ex : DBUtil
 3. servlet에서 Dao를 사용한다.

  - 기본 CRUD
  - 페이지 조회
  - 검색

 JDBC에 대한 사전적 의미

 --------------------------------------------------------------------------------
 2019-01-15
 JDBC : DB접속, SQL 준비, 바인딩, SQL 실행, 읽기, DB접속

DB의 연결을 하고 끊는 것에 대해서 오래걸림 -> interface의 DataSource가 ConnectPool을 만들어서 DBMS에 연결을 맺는다.

 => 사용할 때는 커넥트 풀에서 conn하나가 사용중으로 바뀌면서 사용 / 다쓰면 대기 => 너무 많이 사용하지 않도록 한다.

 => JPA, SQL

 https://www.baeldung.com/hikaricp

 HikariCP를 가지는 객체는 메모리에 하나만 있으면 좋겟다.
 메모리에 하나만 있는 객체를 우리는 '싱글턴' 객체라고 한다.

 public class 클래스명{
    //2) private static하게 자기 자신 인스턴스를 참조하는 변수를 선언
    private static 클래스명 instance = new 클래스명();

    //3) 2에서 선언한 객체를 리턴하는 static메소드를 제공
    public static 클래스명 getInstance(){
        return instance;
    }

    1) private 생성자를 만든다.
    private 클래스명(){
        초기화 코드
    }
 }

 사용방법 obj = 클래스명. getInstance();

 ** 히든태그

 -----------------------------------------------------------------------------------------------------
 2019-01-16
 * 출금(계좌, 금일)
  1. 잔액 조회
  2. 안액 - 금액
  3. 추가

  트랜잭션 : 하나의 논리적인 작업 단위 / commit(적용) + rollback(되돌리기)
  - autocommit은 mysql에서 자동으로 적용된다. (끄고 싶다면 수정을 해주길...)
  - 커밋, 롤백, 클로즈 될떄 트랜잭션이 끝난다.

 게시판
  - 목록 읽어오기
  - 페이지
  - 상세정보

 서비스, 비지니스 레이어(여러가지 DAO를 트랜잭션이 처리를 해주는 거

 DAO 하나의 데이터를 처리하는 메소드

 - 레이어드 아키텍처
 - ThreadLocal : 커넥션을 파라미터로 전달하는 방식에서 벗어나기위해서
 - 쓰레드 풀
 - 시퀀스 다이어 그램
 - conn을 boardService에서 가져오고 close한다.

 - DAO랑 VO는 싱글턴으로 한다.

------------------------------------------------------------------------
2019-01-17
 * 참조키로 할때 해당 유일값이 id를 참조해야지 문자열을 찹조하면 변환할떄 비용이 발생한다.
 * Try with-resources / close를 하는데 의미없는 catch문이 생성이되는 걸 해결 해준다.
 * spring-security-core